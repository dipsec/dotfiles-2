" stuff to improve
" - autocomplete
" - vimrc formatting
" - skybison?
" - command-t
" - pasting from the system clipboard

" ----- Vundle Bootstrap -----
set nocompatible
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" ----- Vundle Bundles -----
Bundle 'gmarik/vundle'
Bundle 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Bundle 'Lokaltog/powerline-fonts'
Bundle 'Lokaltog/vim-easymotion'
Bundle 'godlygeek/tabular'
Bundle 'groenewege/vim-less'
Bundle 'hail2u/vim-css3-syntax'
Bundle 'kchmck/vim-coffee-script'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'scrooloose/nerdcommenter'
Bundle 'scrooloose/nerdtree'
Bundle 'tomasr/molokai'
Bundle 'tomtom/checksyntax_vim'
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-surround'

filetype plugin indent on

" ----- GUI/Powerline configs -----
set guifont=Inconsolata\ for\ Powerline\ 10
set laststatus=2
set guioptions=-M
set guioptions=-T
set guioptions=-r
:colorscheme molokai
let g:molokai_original = 1
highlight ColorColumn ctermbg=4 " change the highlight to darkblue
highlight CursorLine ctermbg=0  " change the highlight to darkblue
scriptencoding utf-8
syntax on

" open the tag list browser on the right
let mapleader = ","
let Tlist_Use_Right_Window = 1

" ----- General -----
"set pastetoggle=<F12>           " pastetoggle (sane indentation on pastes)
"set scrolljump=5                " lines to scroll when cursor leaves screen
"set scrolloff=3                 " minimum lines to keep above and below cursor
"set showmatch                   " show matching brackets/parenthesis
"set spell                       " spell checking on
set autochdir
set autoindent                  " indent at the same level of the previous line
set backspace=indent,eol,start  " backspace for dummies
set colorcolumn=80,120          " highlight the 80th column
set cursorline                  " highlight current line
set expandtab                   " tabs are spaces, not tabs
set foldenable                  " auto fold code
set foldmethod=indent
set foldnestmax=3
set hidden
set hlsearch                    " highlight search terms
set ignorecase                  " case insensitive search
set incsearch                   " find as you type search
set linespace=0                 " No extra spaces between rows
set matchpairs+=<:>             " match, to be used with %
set mouse=a                     " automatically enable mouse usage
set nobackup
set noswapfile
set nowb
set nowrap                      " wrap long lines
set nu                          " Line numbers on
set shiftwidth=4                " an indentation every four columns
set si
set smartcase                   " case sensitive when uc present
set smarttab
set softtabstop=4               " let backspace delete indent
set t_Co=256
set tabstop=4                   " an indentation every four columns
set virtualedit=onemore         " allow for cursor beyond last character
set whichwrap=b,s,h,l,<,>,[,]   " backspace and cursor keys wrap to
set wildmenu                    " show list instead of just completing
set wildmode=list:longest,full  " command <Tab> completion, list matches, then longest common part, then all.
set winminheight=0              " windows can be 0 line high

" ----- Remaps -----
cmap Tabe tabe

:imap jk <Esc>
:imap JK <Esc>
:imap kj <Esc>
:imap KJ <Esc>
:imap <C-BS> <C-W>

"nnoremap tm  :tabm<Space>
nnoremap <leader>x @q
nnoremap <C-H> <C-W>h
nnoremap <C-J> <C-W>j
nnoremap <C-K> <C-W>k
nnoremap <C-L> <C-W>l
nnoremap <silent> <leader>d :bd<CR> 
nnoremap <silent> <leader>f :NERDTreeToggle<CR> 
nnoremap <silent> <leader>h :split<CR> 
nnoremap <silent> <leader>q :q<CR> 
nnoremap <silent> <leader>sc :e /tmp/scratch.txt<CR> 
nnoremap <silent> <leader>t :TlistToggle<CR> 
nnoremap <silent> <leader>v :vsplit<CR> 
nnoremap <silent> <leader>w :w<CR> 
nnoremap <silent> <space> :noh<CR> 
nnoremap j gj
nnoremap k gk
nnoremap td :tabclose<CR>
nnoremap tf :tabfirst<CR>
nnoremap tk :tabnext<CR>
nnoremap tj :tabprev<CR>
nnoremap tl :tablast<CR>
nnoremap tn :tabnext<CR>
nnoremap tt :tabnew<CR>
vnoremap < <gv
vnoremap <silent> <leader>s :sort<CR> 
vnoremap <silent> <leader>a :Tab /=<CR> 
vnoremap > >gv

" ----- Filetype-specific -----
" specify custom file types
au BufNewFile,BufRead *.json set filetype=javascript
au BufNewFile,BufRead *.md.erb set filetype=markdown

" apply 2 space indents to certain filetypes
autocmd FileType coffee setlocal shiftwidth=2 tabstop=2
autocmd FileType javascript setlocal shiftwidth=2 tabstop=2
autocmd FileType ruby setlocal shiftwidth=2 tabstop=2

